apply plugin: 'com.android.application'

android {
    compileSdkVersion 21
    buildToolsVersion "21.1.2"

    defaultConfig {
        applicationId "com.v2vq.gles"
        minSdkVersion 18
        targetSdkVersion 21
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    
//    sourceSets { main { jni.srcDirs = ['src/main/jni', 'src/main/jni/'] } }
    sourceSets.main.jni.srcDirs = []
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    // http://stackoverflow.com/questions/16683775/include-so-library-in-apk-in-android-studio
    compile fileTree(dir: "$buildDir/libs", include: ['*.jar'])
    compile 'com.android.support:appcompat-v7:21.0.3'
}

tasks.withType(JavaCompile) {
    compileTask -> compileTask.dependsOn ndkLibsToJar
}

task ndkLibsToJar(type: Zip, dependsOn: 'ndkBuild', description: 'Create a JAR of the native libs') {
    destinationDir new File(buildDir, 'libs')
    baseName 'ndk-libs'
    extension 'jar'
    from(new File(buildDir, 'libs')) { include '**/*.so' }
    from(new File(buildDir, 'libs')) { include '**/gdb.setup' }
    from(new File(buildDir, 'libs')) { include '**/gdbserver' }
    into 'armeabi/'
    into 'lib/'
}

task ndkBuild(type: Exec, description: 'Compile JNI source via NDK') {
    def ndkDir = plugins.getPlugin('com.android.application').sdkHandler.ndkFolder
    commandLine "$ndkDir/ndk-build",
            'NDK_MODULE_PATH=src/main/prebuild',
            'NDK_DEBUG=1',
            'V=1',
            'NDK_PROJECT_PATH=build',
            'APP_BUILD_SCRIPT=src/main/jni/Android.mk',  
            'NDK_APPLICATION_MK=src/main/jni/Application.mk'
}